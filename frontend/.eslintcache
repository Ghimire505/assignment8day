[{"C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\index.js":"1","C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\state\\initialState.js":"2","C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\views\\InboxView.js":"3","C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\NavBar.js":"4","C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\_constants.js":"5","C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\views\\LoginView.js":"6"},{"size":173,"mtime":1657561946482,"results":"7","hashOfConfig":"8"},{"size":114,"mtime":1657561946482,"results":"9","hashOfConfig":"8"},{"size":3210,"mtime":1657561946484,"results":"10","hashOfConfig":"8"},{"size":1087,"mtime":1657561946479,"results":"11","hashOfConfig":"8"},{"size":50,"mtime":1657564097008,"results":"12","hashOfConfig":"8"},{"size":3818,"mtime":1657566613287,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"15odbff",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\index.js",[],["29","30"],"C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\state\\initialState.js",[],"C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\views\\InboxView.js",["31"],"import { Avatar, Icon, List, ListItem, ListItemIcon, ListItemText, ListItemSecondaryAction } from \"@material-ui/core\";\r\nimport CheckIcon from '@material-ui/icons/Check'\r\n\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MessageActionBar } from \"../MessageActionBar\";\r\n\r\nexport function InboxView() {\r\n    const dispatch = useDispatch()\r\n    const currentUser = useSelector(state => state.currentUser)\r\n    const selectedMessageIds = useSelector(state => state.selectedMessageIds)\r\n\r\n    function toggleMessage(id, e) {\r\n        e.stopPropagation()\r\n        if (selectedMessageIds.includes(id)) {\r\n            dispatch({ type: 'UNSELECT_MESSAGE', id })\r\n        } else {\r\n            dispatch({ type: 'SELECT_MESSAGE', id })\r\n        }\r\n    }\r\n\r\n    function unSelectAll() {\r\n        dispatch({ type: 'UNSELECT_ALL_MESSAGES' })\r\n    }\r\n\r\n    return (\r\n        <div style={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n            <MessageActionBar />\r\n            <div style={{ flex: 1 }} onClick={unSelectAll}>\r\n                <List className=\"inbox\" style={{ margin: '0 auto 2em auto' }}>\r\n                    {currentUser.inbox.map(message => (\r\n                        <MessageCard className=\"email\" key={message._id} message={message} onClick={(e) => toggleMessage(message._id, e)} />\r\n                    ))}\r\n                </List>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MessageCard(props) {\r\n    const message = props.message\r\n    const selectedMessageIds = useSelector(state => state.selectedMessageIds)\r\n    const sent = formatDate(message.sent)\r\n    const defaultColor = message.isRead ? undefined : '#e0c08b'\r\n    return (\r\n        <ListItem onClick={props.onClick}>\r\n            <ListItemIcon>\r\n                <Avatar style={{ backgroundColor: selectedMessageIds.includes(message._id) ? '#5D3ED2' : defaultColor }}>\r\n                    {selectedMessageIds.includes(message._id)\r\n                        ? <CheckIcon />\r\n                        : message.from.slice(0, 1)\r\n                    }\r\n                </Avatar>\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                style={{ maxWidth: '80%', userSelect: 'none' }}\r\n                primary={(\r\n                    <span className=\"subject\" style={{ opacity: message.isRead ? '0.6' : '1', fontWeight: message.isRead ? '200' : '500' }}>\r\n                        {message.from}: {message.subject}\r\n                    </span>\r\n                )}\r\n                secondary={(\r\n                    <span className=\"body\" style={{ opacity: message.isRead ? '0.6' : '1', fontWeight: message.isRead ? '100' : '400' }}>\r\n                        {message.content}\r\n                    </span>\r\n                )}\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <ListItemText\r\n                    secondary={\r\n                        <span className=\"date\">{sent}</span>\r\n                    }\r\n                />\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nfunction formatDate(dateStr) {\r\n    let date = new Date(dateStr)\r\n    let dateString = date.toString()\r\n    return `${date.getDate()} ${dateString.split(' ')[1]}`\r\n}","C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\NavBar.js",["32"],"import { useState } from 'react'\r\nimport { Menu, MenuItem, Button } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\n\r\nexport function NavBar() {\r\n    const currentUser = useSelector(state => state.currentUser)\r\n    const dispatch = useDispatch()\r\n    const [button, setButton] = useState(null)\r\n    return (\r\n        <header>\r\n            <div>\r\n                <img src=\"assets/mailbox.png\"/>\r\n                <h1>HackerMail</h1>\r\n            </div>\r\n            <Button onClick={(e) => setButton(e.target)} style={{ color: '#eee' }}>\r\n                <PowerSettingsNewIcon/>\r\n            </Button>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={button}\r\n                keepMounted\r\n                open={Boolean(button)}\r\n                onClose={() => setButton(null)}\r\n            >\r\n                <MenuItem onClick={() => dispatch({ type: 'LOGOUT' })}>Logout {currentUser.name} </MenuItem>\r\n            </Menu>\r\n        </header>\r\n    )\r\n}","C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\_constants.js",[],"C:\\Users\\naray\\OneDrive\\Desktop\\assignment\\FSI-Full-Stack-Project-Demo\\frontend\\src\\views\\LoginView.js",["33","34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":18,"nodeType":"42","messageId":"43","endLine":1,"endColumn":22},{"ruleId":"44","severity":1,"message":"45","line":13,"column":17,"nodeType":"46","endLine":13,"endColumn":48},{"ruleId":"40","severity":1,"message":"47","line":1,"column":21,"nodeType":"42","messageId":"43","endLine":1,"endColumn":27},{"ruleId":"40","severity":1,"message":"48","line":1,"column":45,"nodeType":"42","messageId":"43","endLine":1,"endColumn":49},{"ruleId":"44","severity":1,"message":"45","line":45,"column":25,"nodeType":"46","endLine":45,"endColumn":56},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]